apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'com.google.gms.google-services'

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

android {
  compileSdkVersion versions.compileSdk
  buildToolsVersion versions.buildTools

  signingConfigs {
    debug {
      storeFile file('keystore/debug.jks')
      keyAlias 'androiddebugkey'
      keyPassword 'android'
      storePassword 'android'
    }
  }

  dexOptions {
    javaMaxHeapSize "2g"
  }

  realm {
    syncEnabled = true
  }

  lintOptions {
    checkReleaseBuilds false
    abortOnError false
  }

  defaultConfig {
    applicationId "com.bankex.pay"
    minSdkVersion versions.minSdk
    targetSdkVersion versions.targetSdk

    versionCode System.getenv("BUILD_NUMBER") as Integer ?: 0
    versionName computeVersionName(versionCode)

    multiDexEnabled true
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath true
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      debuggable false
      zipAlignEnabled true

      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField "boolean", "AUTHORIZATION_ENABLED", "false"
      ext.betaDistributionReleaseNotesFilePath = 'release_notes.txt'
    }

    debug {
      applicationIdSuffix ".dev"
      minifyEnabled false
      debuggable true
      signingConfig signingConfigs.debug

      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      buildConfigField "boolean", "AUTHORIZATION_ENABLED", "true"
      ext.betaDistributionReleaseNotesFilePath = 'release_notes.txt'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  productFlavors {
  }

  defaultConfig {
    // Other values set here
    manifestPlaceholders = [fabric_io_id: "5b2cfd1743e96d92261c59fb94482a93c8ec4e13"]
  }
}

def computeVersionName(int versionCode) {
  if (versions.hotfix > 0) {
    return String.format('%d.%d.%d', versions.major, versions.minor, versions.hotfix)
  } else {
    return String.format('%d.%d', versions.major, versions.minor)
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation project(':tn')

  implementation androidSupport.appcompatV7
  implementation androidSupport.design
  implementation androidSupport.preference
  implementation androidSupport.constraintLayout

  implementation firebaseLibs.firebase
  implementation firebaseLibs.firebaseDynamicLink
  implementation firebaseLibs.firebaseCloudMessaging
  implementation firebaseLibs.firebaseAppIndexing

  implementation walletLibs.web3j
  implementation walletLibs.ethereum
  implementation walletLibs.bip32
  implementation walletLibs.bip39
  implementation walletLibs.bip44

  implementation(helperLibs.fabric) {
    transitive = true
  }

  implementation helperLibs.dagger2
  annotationProcessor helperLibs.dagger2Compiler
  annotationProcessor helperLibs.dagger2Processor

  implementation helperLibs.moxy
  implementation helperLibs.moxyAppCompat
  annotationProcessor helperLibs.moxyCompiler

  implementation helperLibs.rxJava2
  implementation helperLibs.rxAndroid2
  implementation helperLibs.retrofit
  implementation helperLibs.retrofitConverter
  implementation helperLibs.retrofitRxAdapter
  implementation helperLibs.okHttpInterceptor

  implementation helperLibs.appintro
  implementation helperLibs.adapterDelegates
  implementation helperLibs.butterKnife
  annotationProcessor helperLibs.butterKnifeProcessor
  implementation helperLibs.fragmentArgs
  annotationProcessor helperLibs.fragmentArgsProcessor
  implementation helperLibs.fingetprint
  implementation helperLibs.guava
  implementation helperLibs.qrCodeScanner
  implementation helperLibs.qrGenerator

  testImplementation testingLibraries.junit
  testImplementation testingLibraries.mockito
  testImplementation testingLibraries.robolectric
  testImplementation testingLibraries.hamcrest
  androidTestImplementation(testingLibraries.mockito) { exclude group: 'net.bytebuddy' }
  androidTestImplementation testingLibraries.testRunner
  androidTestImplementation testingLibraries.espresso
}
